generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          String
  accounts      Account[]
  sessions      Session[]
  report        report[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model generalDisclosureListedEntity {
  id                      String         @id @default(cuid())
  cin                     String?        @unique
  name                    String?
  yearOfIncorporation     Int?
  registeredOfficeAddress String?
  corporateAddress        String?
  email                   String?
  telephone               String?
  website                 String?
  financialYear           String?
  stockExchanges          String?
  paidUpCapital           String?
  contactPerson           ContactPerson? @relation(fields: [contactPersonId], references: [id])
  reportingBoundary       BoundaryType?
  reportingBoundaryText   String?
  contactPersonId         String
  detailsOfBusinessActivities  Json?


  report                  report[]
}

model ContactPerson {
  id                            String                          @id @default(cuid())
  name                          String?
  telephone                     String?
  email                         String?
  generalDisclosureListedEntity generalDisclosureListedEntity[]
}

enum BoundaryType {
  STANDALONE
  CONSOLIDATED
}

model report {
  id                              String                         @id @default(cuid())
  sectionA                        generalDisclosureListedEntity? @relation(fields: [generalDisclosureListedEntityId], references: [id])
  generalDisclosureListedEntityId String?
  user                            User?                          @relation(fields: [userId], references: [id])
  userId                          String?
}
