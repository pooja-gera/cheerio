generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          String
  accounts      Account[]
  sessions      Session[]
  report        report[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model generalDisclosureListedEntity {
  id                                          String         @id @default(cuid())
  cin                                         String?        @unique
  name                                        String?
  yearOfIncorporation                         Int?
  registeredOfficeAddress                     String?
  corporateAddress                            String?
  email                                       String?
  telephone                                   String?
  website                                     String?
  financialYear                               String?
  stockExchanges                              String?
  paidUpCapital                               String?
  contactPerson                               ContactPerson? @relation(fields: [contactPersonId], references: [id])
  reportingBoundary                           BoundaryType?
  reportingBoundaryText                       String?
  contactPersonId                             String
  detailsOfBusinessActivities                 Json?
  productsServicesSoldByEntity                Json?
  numOfLocWhereOffices                        Json?
  marketsServedA                              Json?
  marketsServedB                              String?
  marketsServedC                              String?
  detailsEndFinYrA                            Json?
  detailsEndFinYrB                            Json?
  participationOfWomen                        Json?
  turnoverRate                                Json?
  namesOfVentures                             Json?
  csrDetailsI                                 Boolean?
  csrDetailsII                                Int?
  csrDetailsIII                               Int?
  complaintsOnAnyPrinciples                   Json?
  overviewOfMaterialResponsibleBusinessIssues Json?
  report                                      report[]
}

model ManagementAndProcessDisclosuresListedEntity {
  id                          String    @id @default(cuid())
  isCoverEachPrinciple_1a     Boolean[] @default([false, false, false, false, false, false, false, false, false])
  isProjectApprovedByBoard_1b Boolean[] @default([false, false, false, false, false, false, false, false, false])
  policyWebLinks_1c String[] @default(["", "", "", "", "", "", "", "", ""])
  isPolicyTranslated_2 Boolean[] @default([false, false, false, false, false, false, false, false, false])
  isPolicyExtendValueChain_3 Boolean[] @default([false, false, false, false, false, false, false, false, false])
  certificationsList_4 String[] @default(["", "", "", "", "", "", "", "", ""])
  specificGoals_5 String[] @default(["", "", "", "", "", "", "", "", ""])
  performance_6 String[] @default(["", "", "", "", "", "", "", "", ""])
  directorStatement_7 String?
  highestAuthority_8 String?
  isSpecifiedCommitteePresent_9 Boolean?
  performanceAgainstPolicies_10a Json?
  compliance_10b Json?
  isIndependentAssessment_11 Boolean[] @default([false, false, false, false, false, false, false, false, false])
  isPrincipleMaterialToBusiness_12a Boolean[] @default([false, false, false, false, false, false, false, false, false])
  isEntityAtStage_12b Boolean[] @default([false, false, false, false, false, false, false, false, false])
  isResourcesAvailable_12c Boolean[] @default([false, false, false, false, false, false, false, false, false])
  isNextYearPlan_12d Boolean[] @default([false, false, false, false, false, false, false, false, false])
  otherReasons_12e String[] @default(["", "", "", "", "", "", "", "", ""])
  report                                      report[]
}

model ContactPerson {
  id                            String                          @id @default(cuid())
  name                          String?
  telephone                     String?
  email                         String?
  generalDisclosureListedEntity generalDisclosureListedEntity[]
}

enum BoundaryType {
  STANDALONE
  CONSOLIDATED
}

model report {
  id                              String                         @id @default(cuid())
  sectionA                        generalDisclosureListedEntity? @relation(fields: [generalDisclosureListedEntityId], references: [id])
  sectionB                       ManagementAndProcessDisclosuresListedEntity? @relation(fields: [managementAndProcessDisclosuresListedEntityId], references: [id])
  managementAndProcessDisclosuresListedEntityId String?
  generalDisclosureListedEntityId String?
  user                            User?                          @relation(fields: [userId], references: [id])
  userId                          String?
}
